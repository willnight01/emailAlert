{"version":3,"file":"Channels-4-QNK_Ph.js","sources":["../../src/components/WeChatConfig.vue","../../src/components/DingTalkConfig.vue","../../src/components/EmailConfig.vue","../../src/components/WebhookConfig.vue","../../src/views/Channels.vue"],"sourcesContent":["<template>\n  <div class=\"wechat-config\">\n    <el-form-item label=\"推送类型\" prop=\"type\">\n      <el-radio-group v-model=\"localConfig.type\" @change=\"handleTypeChange\">\n        <el-radio label=\"robot\">群机器人</el-radio>\n        <el-radio label=\"app\">应用消息</el-radio>\n      </el-radio-group>\n    </el-form-item>\n\n    <!-- 群机器人配置 -->\n    <template v-if=\"localConfig.type === 'robot'\">\n      <el-form-item label=\"Webhook地址\" prop=\"webhook_url\">\n        <el-input \n          v-model=\"localConfig.webhook_url\" \n          placeholder=\"请输入群机器人Webhook地址\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            在企业微信群中添加机器人，复制Webhook地址\n          </el-text>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"Key\" prop=\"key\">\n        <el-input \n          v-model=\"localConfig.key\" \n          placeholder=\"请输入机器人Key（可选）\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            从Webhook地址中提取的key参数\n          </el-text>\n        </div>\n      </el-form-item>\n    </template>\n\n    <!-- 应用消息配置 -->\n    <template v-if=\"localConfig.type === 'app'\">\n      <el-form-item label=\"企业ID\" prop=\"corp_id\">\n        <el-input \n          v-model=\"localConfig.corp_id\" \n          placeholder=\"请输入企业ID\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"应用ID\" prop=\"agent_id\">\n        <el-input-number \n          v-model=\"localConfig.agent_id\" \n          placeholder=\"请输入应用ID\"\n          style=\"width: 100%\"\n          @change=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"应用Secret\" prop=\"secret\">\n        <el-input \n          v-model=\"localConfig.secret\" \n          placeholder=\"请输入应用Secret\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"接收人\" prop=\"to_user\">\n        <el-input \n          v-model=\"localConfig.to_user\" \n          placeholder=\"请输入接收人用户ID，多个用|分隔\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            用户ID，多个用|分隔，如：userid1|userid2\n          </el-text>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"接收部门\" prop=\"to_party\">\n        <el-input \n          v-model=\"localConfig.to_party\" \n          placeholder=\"请输入接收部门ID，多个用|分隔（可选）\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"接收标签\" prop=\"to_tag\">\n        <el-input \n          v-model=\"localConfig.to_tag\" \n          placeholder=\"请输入接收标签ID，多个用|分隔（可选）\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n    </template>\n\n    <el-form-item>\n      <el-button \n        type=\"primary\" \n        @click=\"handleTest\"\n        :loading=\"testing\"\n        icon=\"Connection\"\n      >\n        测试配置\n      </el-button>\n    </el-form-item>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'test'])\n\nconst testing = ref(false)\nconst localConfig = reactive({\n  type: 'robot',\n  webhook_url: '',\n  key: '',\n  corp_id: '',\n  agent_id: null,\n  secret: '',\n  to_user: '',\n  to_party: '',\n  to_tag: ''\n})\n\n// 监听props变化\nwatch(() => props.modelValue, (newVal) => {\n  if (newVal && typeof newVal === 'object') {\n    Object.assign(localConfig, {\n      type: 'robot',\n      webhook_url: '',\n      key: '',\n      corp_id: '',\n      agent_id: null,\n      secret: '',\n      to_user: '',\n      to_party: '',\n      to_tag: '',\n      ...newVal\n    })\n  }\n}, { immediate: true })\n\nconst emitChange = () => {\n  emit('update:modelValue', { ...localConfig })\n}\n\nconst handleTypeChange = () => {\n  // 切换类型时清空其他字段\n  if (localConfig.type === 'robot') {\n    localConfig.corp_id = ''\n    localConfig.agent_id = null\n    localConfig.secret = ''\n    localConfig.to_user = ''\n    localConfig.to_party = ''\n    localConfig.to_tag = ''\n  } else {\n    localConfig.webhook_url = ''\n    localConfig.key = ''\n  }\n  emitChange()\n}\n\nconst handleTest = async () => {\n  testing.value = true\n  try {\n    await emit('test', { ...localConfig })\n  } finally {\n    testing.value = false\n  }\n}\n\nonMounted(() => {\n  // 初始化时触发一次\n  emitChange()\n})\n</script>\n\n<style scoped>\n.wechat-config {\n  margin-top: 10px;\n}\n\n.form-tip {\n  margin-top: 5px;\n}\n</style> ","<template>\n  <div class=\"dingtalk-config\">\n    <el-form-item label=\"推送类型\" prop=\"type\">\n      <el-radio-group v-model=\"localConfig.type\" @change=\"handleTypeChange\">\n        <el-radio label=\"robot\">群机器人</el-radio>\n        <el-radio label=\"work\">工作通知</el-radio>\n      </el-radio-group>\n    </el-form-item>\n\n    <!-- 群机器人配置 -->\n    <template v-if=\"localConfig.type === 'robot'\">\n      <el-form-item label=\"Webhook地址\" prop=\"webhook_url\">\n        <el-input \n          v-model=\"localConfig.webhook_url\" \n          placeholder=\"请输入群机器人Webhook地址\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            在钉钉群中添加自定义机器人，复制Webhook地址\n          </el-text>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"加签密钥\" prop=\"secret\">\n        <el-input \n          v-model=\"localConfig.secret\" \n          placeholder=\"请输入加签密钥（可选）\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            如果设置了加签安全设置，请输入密钥\n          </el-text>\n        </div>\n      </el-form-item>\n    </template>\n\n    <!-- 工作通知配置 -->\n    <template v-if=\"localConfig.type === 'work'\">\n      <el-form-item label=\"AppKey\" prop=\"app_key\">\n        <el-input \n          v-model=\"localConfig.app_key\" \n          placeholder=\"请输入应用AppKey\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"AppSecret\" prop=\"app_secret\">\n        <el-input \n          v-model=\"localConfig.app_secret\" \n          placeholder=\"请输入应用AppSecret\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"AgentId\" prop=\"agent_id\">\n        <el-input-number \n          v-model=\"localConfig.agent_id\" \n          placeholder=\"请输入应用AgentId\"\n          style=\"width: 100%\"\n          @change=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"接收用户\" prop=\"user_ids\">\n        <el-input \n          v-model=\"localConfig.user_ids\" \n          placeholder=\"请输入接收用户ID，多个用逗号分隔\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            用户ID，多个用逗号分隔，如：userid1,userid2\n          </el-text>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"接收部门\" prop=\"dept_ids\">\n        <el-input \n          v-model=\"localConfig.dept_ids\" \n          placeholder=\"请输入接收部门ID，多个用逗号分隔（可选）\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"发送全员\" prop=\"to_all_user\">\n        <el-switch \n          v-model=\"localConfig.to_all_user\" \n          @change=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            开启后将发送给企业全部用户\n          </el-text>\n        </div>\n      </el-form-item>\n    </template>\n\n    <el-form-item>\n      <el-button \n        type=\"primary\" \n        @click=\"handleTest\"\n        :loading=\"testing\"\n        icon=\"Connection\"\n      >\n        测试配置\n      </el-button>\n    </el-form-item>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'test'])\n\nconst testing = ref(false)\nconst localConfig = reactive({\n  type: 'robot',\n  webhook_url: '',\n  secret: '',\n  app_key: '',\n  app_secret: '',\n  agent_id: null,\n  user_ids: '',\n  dept_ids: '',\n  to_all_user: false\n})\n\n// 监听props变化\nwatch(() => props.modelValue, (newVal) => {\n  if (newVal && typeof newVal === 'object') {\n    Object.assign(localConfig, {\n      type: 'robot',\n      webhook_url: '',\n      secret: '',\n      app_key: '',\n      app_secret: '',\n      agent_id: null,\n      user_ids: '',\n      dept_ids: '',\n      to_all_user: false,\n      ...newVal\n    })\n  }\n}, { immediate: true })\n\nconst emitChange = () => {\n  emit('update:modelValue', { ...localConfig })\n}\n\nconst handleTypeChange = () => {\n  // 切换类型时清空其他字段\n  if (localConfig.type === 'robot') {\n    localConfig.app_key = ''\n    localConfig.app_secret = ''\n    localConfig.agent_id = null\n    localConfig.user_ids = ''\n    localConfig.dept_ids = ''\n    localConfig.to_all_user = false\n  } else {\n    localConfig.webhook_url = ''\n    localConfig.secret = ''\n  }\n  emitChange()\n}\n\nconst handleTest = async () => {\n  testing.value = true\n  try {\n    await emit('test', { ...localConfig })\n  } finally {\n    testing.value = false\n  }\n}\n\nonMounted(() => {\n  // 初始化时触发一次\n  emitChange()\n})\n</script>\n\n<style scoped>\n.dingtalk-config {\n  margin-top: 10px;\n}\n\n.form-tip {\n  margin-top: 5px;\n}\n</style> ","<template>\n  <div class=\"email-config\">\n    <el-form-item label=\"SMTP服务器\" prop=\"host\">\n      <el-input \n        v-model=\"localConfig.host\" \n        placeholder=\"请输入SMTP服务器地址\"\n        @input=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          如：smtp.gmail.com, smtp.qq.com, smtp.126.com\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"端口\" prop=\"port\">\n      <el-input-number \n        v-model=\"localConfig.port\" \n        placeholder=\"请输入SMTP端口\"\n        :min=\"1\"\n        :max=\"65535\"\n        style=\"width: 100%\"\n        @change=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          SSL: 465, TLS: 587, 无加密: 25\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"用户名\" prop=\"username\">\n      <el-input \n        v-model=\"localConfig.username\" \n        placeholder=\"请输入SMTP用户名\"\n        @input=\"emitChange\"\n      />\n    </el-form-item>\n\n    <el-form-item label=\"密码\" prop=\"password\">\n      <el-input \n        v-model=\"localConfig.password\" \n        placeholder=\"请输入SMTP密码\"\n        type=\"password\"\n        show-password\n        @input=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          Gmail等需要使用应用专用密码\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"SSL加密\" prop=\"ssl\">\n      <el-switch \n        v-model=\"localConfig.ssl\" \n        @change=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          开启后使用SSL/TLS加密连接\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"发件人\" prop=\"from\">\n      <el-input \n        v-model=\"localConfig.from\" \n        placeholder=\"请输入发件人邮箱地址\"\n        @input=\"emitChange\"\n      />\n    </el-form-item>\n\n    <el-form-item label=\"发件人姓名\" prop=\"from_name\">\n      <el-input \n        v-model=\"localConfig.from_name\" \n        placeholder=\"请输入发件人姓名（可选）\"\n        @input=\"emitChange\"\n      />\n    </el-form-item>\n\n    <el-form-item label=\"收件人\" prop=\"to\">\n      <el-input \n        v-model=\"toAddresses\" \n        placeholder=\"请输入收件人邮箱地址，多个用逗号分隔\"\n        @input=\"handleToChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          多个收件人用逗号分隔，如：user1@example.com,user2@example.com\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"抄送\" prop=\"cc\">\n      <el-input \n        v-model=\"ccAddresses\" \n        placeholder=\"请输入抄送邮箱地址，多个用逗号分隔（可选）\"\n        @input=\"handleCcChange\"\n      />\n    </el-form-item>\n\n    <el-form-item label=\"邮件格式\" prop=\"format\">\n      <el-radio-group v-model=\"localConfig.format\" @change=\"emitChange\">\n        <el-radio label=\"text\">纯文本</el-radio>\n        <el-radio label=\"html\">HTML</el-radio>\n        <el-radio label=\"mixed\">混合格式</el-radio>\n      </el-radio-group>\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          混合格式推荐使用，兼容性最好\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"邮件主题\" prop=\"subject\">\n      <el-input \n        v-model=\"localConfig.subject\" \n        placeholder=\"请输入邮件主题模板（可选）\"\n        @input=\"emitChange\"\n      />\n              <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            支持变量：{{title}}、{{date}}、{{time}}\n          </el-text>\n        </div>\n    </el-form-item>\n\n    <el-form-item label=\"邮件优先级\" prop=\"priority\">\n      <el-select v-model=\"localConfig.priority\" placeholder=\"选择邮件优先级\" @change=\"emitChange\">\n        <el-option :value=\"1\" label=\"高优先级\" />\n        <el-option :value=\"3\" label=\"普通优先级\" />\n        <el-option :value=\"5\" label=\"低优先级\" />\n      </el-select>\n    </el-form-item>\n\n    <el-form-item>\n      <el-button \n        type=\"primary\" \n        @click=\"handleTest\"\n        :loading=\"testing\"\n        icon=\"Connection\"\n      >\n        测试配置\n      </el-button>\n    </el-form-item>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, computed, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'test'])\n\nconst testing = ref(false)\nconst localConfig = reactive({\n  host: '',\n  port: 587,\n  username: '',\n  password: '',\n  ssl: true,\n  from: '',\n  from_name: '',\n  to: [],\n  cc: [],\n  format: 'mixed',\n  subject: '',\n  priority: 3\n})\n\n// 用于显示的地址字符串\nconst toAddresses = ref('')\nconst ccAddresses = ref('')\n\n// 监听props变化\nwatch(() => props.modelValue, (newVal) => {\n  if (newVal && typeof newVal === 'object') {\n    Object.assign(localConfig, {\n      host: '',\n      port: 587,\n      username: '',\n      password: '',\n      ssl: true,\n      from: '',\n      from_name: '',\n      to: [],\n      cc: [],\n      format: 'mixed',\n      subject: '',\n      priority: 3,\n      ...newVal\n    })\n    \n    // 更新显示字符串\n    toAddresses.value = Array.isArray(localConfig.to) ? localConfig.to.join(',') : (localConfig.to || '')\n    ccAddresses.value = Array.isArray(localConfig.cc) ? localConfig.cc.join(',') : (localConfig.cc || '')\n  }\n}, { immediate: true })\n\nconst emitChange = () => {\n  emit('update:modelValue', { ...localConfig })\n}\n\nconst handleToChange = (value) => {\n  toAddresses.value = value\n  localConfig.to = value ? value.split(',').map(email => email.trim()).filter(email => email) : []\n  emitChange()\n}\n\nconst handleCcChange = (value) => {\n  ccAddresses.value = value\n  localConfig.cc = value ? value.split(',').map(email => email.trim()).filter(email => email) : []\n  emitChange()\n}\n\nconst handleTest = async () => {\n  testing.value = true\n  try {\n    await emit('test', { ...localConfig })\n  } finally {\n    testing.value = false\n  }\n}\n\nonMounted(() => {\n  // 初始化时触发一次\n  emitChange()\n})\n</script>\n\n<style scoped>\n.email-config {\n  margin-top: 10px;\n}\n\n.form-tip {\n  margin-top: 5px;\n}\n</style> ","<template>\n  <div class=\"webhook-config\">\n    <el-form-item label=\"Webhook地址\" prop=\"url\">\n      <el-input \n        v-model=\"localConfig.url\" \n        placeholder=\"请输入Webhook URL地址\"\n        @input=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          支持HTTP/HTTPS协议，如：https://api.example.com/webhook\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"请求方法\" prop=\"method\">\n      <el-select v-model=\"localConfig.method\" placeholder=\"选择请求方法\" @change=\"emitChange\">\n        <el-option value=\"GET\" label=\"GET\" />\n        <el-option value=\"POST\" label=\"POST\" />\n        <el-option value=\"PUT\" label=\"PUT\" />\n        <el-option value=\"PATCH\" label=\"PATCH\" />\n        <el-option value=\"DELETE\" label=\"DELETE\" />\n      </el-select>\n    </el-form-item>\n\n    <el-form-item label=\"数据格式\" prop=\"content_type\">\n      <el-select v-model=\"localConfig.content_type\" placeholder=\"选择数据格式\" @change=\"emitChange\">\n        <el-option value=\"application/json\" label=\"JSON\" />\n        <el-option value=\"application/x-www-form-urlencoded\" label=\"表单格式\" />\n        <el-option value=\"text/plain\" label=\"纯文本\" />\n        <el-option value=\"text/xml\" label=\"XML\" />\n        <el-option value=\"application/xml\" label=\"Application XML\" />\n      </el-select>\n    </el-form-item>\n\n    <el-form-item label=\"认证方式\" prop=\"auth_type\">\n      <el-select v-model=\"localConfig.auth_type\" placeholder=\"选择认证方式\" @change=\"handleAuthTypeChange\">\n        <el-option value=\"none\" label=\"无认证\" />\n        <el-option value=\"basic\" label=\"Basic认证\" />\n        <el-option value=\"bearer\" label=\"Bearer Token\" />\n        <el-option value=\"apikey\" label=\"API Key\" />\n      </el-select>\n    </el-form-item>\n\n    <!-- Basic认证 -->\n    <template v-if=\"localConfig.auth_type === 'basic'\">\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input \n          v-model=\"localConfig.username\" \n          placeholder=\"请输入用户名\"\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input \n          v-model=\"localConfig.password\" \n          placeholder=\"请输入密码\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n    </template>\n\n    <!-- Bearer Token -->\n    <template v-if=\"localConfig.auth_type === 'bearer'\">\n      <el-form-item label=\"Token\" prop=\"token\">\n        <el-input \n          v-model=\"localConfig.token\" \n          placeholder=\"请输入Bearer Token\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n    </template>\n\n    <!-- API Key -->\n    <template v-if=\"localConfig.auth_type === 'apikey'\">\n      <el-form-item label=\"API Key名称\" prop=\"api_key_name\">\n        <el-input \n          v-model=\"localConfig.api_key_name\" \n          placeholder=\"请输入API Key名称\"\n          @input=\"emitChange\"\n        />\n        <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            Header名称，如：X-API-Key、Authorization\n          </el-text>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"API Key值\" prop=\"api_key_value\">\n        <el-input \n          v-model=\"localConfig.api_key_value\" \n          placeholder=\"请输入API Key值\"\n          type=\"password\"\n          show-password\n          @input=\"emitChange\"\n        />\n      </el-form-item>\n    </template>\n\n    <el-form-item label=\"自定义Headers\" prop=\"headers\">\n      <el-input \n        v-model=\"customHeaders\" \n        type=\"textarea\" \n        placeholder=\"请输入自定义HTTP头部（JSON格式，可选）\"\n        :rows=\"3\"\n        @input=\"handleHeadersChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          JSON格式，如：{\"Content-Type\": \"application/json\", \"User-Agent\": \"MyApp\"}\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"消息模板\" prop=\"template\">\n      <el-input \n        v-model=\"localConfig.template\" \n        type=\"textarea\" \n        placeholder=\"请输入消息模板（可选）\"\n        :rows=\"4\"\n        @input=\"emitChange\"\n      />\n              <div class=\"form-tip\">\n          <el-text type=\"info\" size=\"small\">\n            支持变量：{{title}}、{{content}}、{{timestamp}}\n          </el-text>\n        </div>\n    </el-form-item>\n\n    <el-form-item label=\"超时时间\" prop=\"timeout\">\n      <el-input-number \n        v-model=\"localConfig.timeout\" \n        placeholder=\"请求超时时间（秒）\"\n        :min=\"1\"\n        :max=\"300\"\n        style=\"width: 100%\"\n        @change=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          请求超时时间，单位秒，建议5-30秒\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item label=\"验证SSL\" prop=\"verify_ssl\">\n      <el-switch \n        v-model=\"localConfig.verify_ssl\" \n        @change=\"emitChange\"\n      />\n      <div class=\"form-tip\">\n        <el-text type=\"info\" size=\"small\">\n          关闭后将跳过SSL证书验证（不推荐）\n        </el-text>\n      </div>\n    </el-form-item>\n\n    <el-form-item>\n      <el-button \n        type=\"primary\" \n        @click=\"handleTest\"\n        :loading=\"testing\"\n        icon=\"Connection\"\n      >\n        测试配置\n      </el-button>\n    </el-form-item>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'test'])\n\nconst testing = ref(false)\nconst customHeaders = ref('')\n\nconst localConfig = reactive({\n  url: '',\n  method: 'POST',\n  content_type: 'application/json',\n  auth_type: 'none',\n  username: '',\n  password: '',\n  token: '',\n  api_key_name: '',\n  api_key_value: '',\n  headers: {},\n  template: '',\n  timeout: 10,\n  verify_ssl: true\n})\n\n// 监听props变化\nwatch(() => props.modelValue, (newVal) => {\n  if (newVal && typeof newVal === 'object') {\n    Object.assign(localConfig, {\n      url: '',\n      method: 'POST',\n      content_type: 'application/json',\n      auth_type: 'none',\n      username: '',\n      password: '',\n      token: '',\n      api_key_name: '',\n      api_key_value: '',\n      headers: {},\n      template: '',\n      timeout: 10,\n      verify_ssl: true,\n      ...newVal\n    })\n    \n    // 更新headers显示\n    try {\n      customHeaders.value = JSON.stringify(localConfig.headers || {}, null, 2)\n    } catch (error) {\n      customHeaders.value = ''\n    }\n  }\n}, { immediate: true })\n\nconst emitChange = () => {\n  emit('update:modelValue', { ...localConfig })\n}\n\nconst handleAuthTypeChange = () => {\n  // 切换认证类型时清空相关字段\n  if (localConfig.auth_type === 'none') {\n    localConfig.username = ''\n    localConfig.password = ''\n    localConfig.token = ''\n    localConfig.api_key_name = ''\n    localConfig.api_key_value = ''\n  } else if (localConfig.auth_type === 'basic') {\n    localConfig.token = ''\n    localConfig.api_key_name = ''\n    localConfig.api_key_value = ''\n  } else if (localConfig.auth_type === 'bearer') {\n    localConfig.username = ''\n    localConfig.password = ''\n    localConfig.api_key_name = ''\n    localConfig.api_key_value = ''\n  } else if (localConfig.auth_type === 'apikey') {\n    localConfig.username = ''\n    localConfig.password = ''\n    localConfig.token = ''\n  }\n  emitChange()\n}\n\nconst handleHeadersChange = (value) => {\n  customHeaders.value = value\n  try {\n    localConfig.headers = value ? JSON.parse(value) : {}\n  } catch (error) {\n    localConfig.headers = {}\n  }\n  emitChange()\n}\n\nconst handleTest = async () => {\n  testing.value = true\n  try {\n    await emit('test', { ...localConfig })\n  } finally {\n    testing.value = false\n  }\n}\n\nonMounted(() => {\n  // 初始化时触发一次\n  emitChange()\n})\n</script>\n\n<style scoped>\n.webhook-config {\n  margin-top: 10px;\n}\n\n.form-tip {\n  margin-top: 5px;\n}\n</style> ","<template>\n  <div class=\"channels\">\n    <el-card>\n      <template #header>\n        <div class=\"page-header\">\n          <span>通知渠道管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">\n            <el-icon><Plus /></el-icon>\n            添加渠道\n          </el-button>\n        </div>\n      </template>\n\n      <!-- 搜索筛选 -->\n      <div class=\"search-filter\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"8\">\n            <el-input\n              v-model=\"searchQuery.name\"\n              placeholder=\"搜索渠道名称\"\n              @input=\"handleSearch\"\n              clearable\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-select\n              v-model=\"searchQuery.type\"\n              placeholder=\"选择渠道类型\"\n              @change=\"handleSearch\"\n              clearable\n            >\n              <el-option\n                v-for=\"type in channelTypes\"\n                :key=\"type\"\n                :label=\"getTypeLabel(type)\"\n                :value=\"type\"\n              />\n            </el-select>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-select\n              v-model=\"searchQuery.status\"\n              placeholder=\"选择状态\"\n              @change=\"handleSearch\"\n              clearable\n            >\n              <el-option label=\"激活\" value=\"active\" />\n              <el-option label=\"停用\" value=\"inactive\" />\n            </el-select>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-button @click=\"handleReset\" :icon=\"Refresh\">重置</el-button>\n          </el-col>\n        </el-row>\n      </div>\n      \n      <!-- 渠道列表 -->\n      <el-table \n        :data=\"channels\" \n        v-loading=\"loading\" \n        style=\"width: 100%\"\n        @sort-change=\"handleSortChange\"\n      >\n        <el-table-column prop=\"name\" label=\"渠道名称\" sortable />\n        <el-table-column prop=\"type\" label=\"类型\" width=\"120\" sortable>\n          <template #default=\"scope\">\n            <el-tag :type=\"getTypeColor(scope.row.type)\">\n              {{ getTypeLabel(scope.row.type) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\" sortable>\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'danger'\">\n              {{ scope.row.status === 'active' ? '激活' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"test_result\" label=\"测试状态\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag \n              v-if=\"scope.row.test_result\" \n              :type=\"scope.row.test_result.includes('成功') ? 'success' : 'danger'\"\n              size=\"small\"\n            >\n              {{ scope.row.test_result.includes('成功') ? '正常' : '异常' }}\n            </el-tag>\n            <span v-else class=\"text-gray-400\">未测试</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\" sortable>\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.created_at) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleTest(scope.row)\"\n                :loading=\"testingChannels.includes(scope.row.id)\"\n                :icon=\"testingChannels.includes(scope.row.id) ? '' : 'Connection'\"\n              >\n                测试\n              </el-button>\n              <el-button \n                type=\"success\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row)\"\n                :icon=\"Edit\"\n              >\n                编辑\n              </el-button>\n              <el-dropdown @command=\"(command) => handleDropdownCommand(command, scope.row)\">\n                <el-button size=\"small\" type=\"info\">\n                  更多<el-icon class=\"el-icon--right\"><ArrowDown /></el-icon>\n                </el-button>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item \n                      command=\"send\"\n                    >\n                      发送测试\n                    </el-dropdown-item>\n                    <el-dropdown-item \n                      command=\"duplicate\"\n                    >\n                      复制渠道\n                    </el-dropdown-item>\n                    <el-dropdown-item \n                      command=\"delete\"\n                      class=\"text-danger\"\n                      divided\n                    >\n                      删除\n                    </el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"pagination.page\"\n          v-model:page-size=\"pagination.size\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total=\"pagination.total\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑渠道对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogTitle\"\n      width=\"600px\"\n      @close=\"handleDialogClose\"\n    >\n      <el-form\n        ref=\"channelFormRef\"\n        :model=\"channelForm\"\n        :rules=\"channelFormRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"渠道名称\" prop=\"name\">\n          <el-input v-model=\"channelForm.name\" placeholder=\"请输入渠道名称\" />\n        </el-form-item>\n        <el-form-item label=\"渠道类型\" prop=\"type\">\n          <el-select v-model=\"channelForm.type\" placeholder=\"请选择渠道类型\" @change=\"handleTypeChange\">\n            <el-option\n              v-for=\"type in channelTypes\"\n              :key=\"type\"\n              :label=\"getTypeLabel(type)\"\n              :value=\"type\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"channelForm.status\">\n            <el-radio label=\"active\">激活</el-radio>\n            <el-radio label=\"inactive\">停用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input \n            v-model=\"channelForm.description\" \n            type=\"textarea\" \n            placeholder=\"请输入渠道描述\"\n            :rows=\"2\"\n          />\n        </el-form-item>\n        \n        <!-- 模版选择 -->\n        <el-form-item label=\"消息模版\" prop=\"template_id\">\n          <el-select\n            v-model=\"channelForm.template_id\"\n            placeholder=\"选择消息模版（不选择则使用默认模版）\"\n            clearable\n            filterable\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"template in filteredTemplates\"\n              :key=\"template.id\"\n              :label=\"`${template.name} (${getTypeLabel(template.type)})`\"\n              :value=\"template.id\"\n            >\n              <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                <span>{{ template.name }}</span>\n                <div style=\"display: flex; align-items: center; gap: 8px;\">\n                  <el-tag \n                    v-if=\"template.is_default\" \n                    size=\"small\" \n                    type=\"success\"\n                  >\n                    默认\n                  </el-tag>\n                  <span style=\"color: #999; font-size: 12px\">{{ getTypeLabel(template.type) }}</span>\n                </div>\n              </div>\n            </el-option>\n          </el-select>\n          <div style=\"font-size: 12px; color: #999; margin-top: 4px;\">\n            <span v-if=\"channelForm.type\">\n              推荐选择\"{{ getTypeLabel(channelForm.type) }}\"类型的模版，不选择时将使用默认模版\n            </span>\n            <span v-else>\n              请先选择渠道类型，然后选择对应的消息模版\n            </span>\n          </div>\n        </el-form-item>\n        \n        <!-- 动态配置表单 -->\n        <template v-if=\"channelForm.type\">\n          <el-divider>{{ getTypeLabel(channelForm.type) }}配置</el-divider>\n          <component \n            :is=\"getConfigComponent(channelForm.type)\" \n            v-model=\"channelConfig\"\n            :type=\"channelForm.type\"\n            @test=\"handleConfigTest\"\n          />\n        </template>\n      </el-form>\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleSubmit\"\n            :loading=\"submitting\"\n          >\n            {{ isEditing ? '更新' : '创建' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 发送测试消息对话框 -->\n    <el-dialog\n      v-model=\"sendDialogVisible\"\n      title=\"发送测试消息\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"sendFormRef\"\n        :model=\"sendForm\"\n        :rules=\"sendFormRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"消息标题\" prop=\"title\">\n          <el-input v-model=\"sendForm.title\" placeholder=\"请输入消息标题\" />\n        </el-form-item>\n        <el-form-item label=\"消息内容\" prop=\"content\">\n          <el-input \n            v-model=\"sendForm.content\" \n            type=\"textarea\" \n            placeholder=\"请输入消息内容\"\n            :rows=\"4\"\n          />\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"sendDialogVisible = false\">取消</el-button>\n          <el-button \n            type=\"primary\" \n            @click=\"handleSendMessage\"\n            :loading=\"sending\"\n          >\n            发送\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive, computed } from 'vue'\nimport { Plus, Search, Refresh, ArrowDown, Edit, Connection } from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { channelsAPI, templatesAPI } from '@/api'\nimport { formatDate } from '@/utils'\n\n// 导入配置组件\nimport WeChatConfig from '@/components/WeChatConfig.vue'\nimport DingTalkConfig from '@/components/DingTalkConfig.vue'\nimport EmailConfig from '@/components/EmailConfig.vue'\nimport WebhookConfig from '@/components/WebhookConfig.vue'\n\n// 响应式数据\nconst channels = ref([])\nconst loading = ref(false)\nconst channelTypes = ref([])\nconst availableTemplates = ref([])\nconst testingChannels = ref([])\n\n// 搜索筛选\nconst searchQuery = reactive({\n  name: '',\n  type: '',\n  status: ''\n})\n\n// 分页\nconst pagination = reactive({\n  page: 1,\n  size: 10,\n  total: 0\n})\n\n// 对话框\nconst dialogVisible = ref(false)\nconst dialogTitle = computed(() => isEditing.value ? '编辑渠道' : '添加渠道')\nconst isEditing = ref(false)\nconst submitting = ref(false)\nconst currentChannel = ref(null)\n\n// 计算属性：根据渠道类型筛选模版\nconst filteredTemplates = computed(() => {\n  if (!channelForm.type) {\n    return availableTemplates.value\n  }\n  \n  // 优先显示匹配的类型，然后是通用类型\n  const matchedTemplates = availableTemplates.value.filter(t => t.type === channelForm.type)\n  const otherTemplates = availableTemplates.value.filter(t => t.type !== channelForm.type)\n  \n  return [...matchedTemplates, ...otherTemplates]\n})\n\n// 表单\nconst channelFormRef = ref()\nconst channelForm = reactive({\n  name: '',\n  type: '',\n  status: 'active',\n  description: '',\n  template_id: ''\n})\n\nconst channelConfig = ref({})\n\nconst channelFormRules = {\n  name: [\n    { required: true, message: '请输入渠道名称', trigger: 'blur' }\n  ],\n  type: [\n    { required: true, message: '请选择渠道类型', trigger: 'change' }\n  ]\n}\n\n// 发送消息对话框\nconst sendDialogVisible = ref(false)\nconst sending = ref(false)\nconst currentSendChannel = ref(null)\n\nconst sendFormRef = ref()\nconst sendForm = reactive({\n  title: '测试消息标题',\n  content: '这是一条来自邮件告警平台的测试消息'\n})\n\nconst sendFormRules = {\n  title: [\n    { required: true, message: '请输入消息标题', trigger: 'blur' }\n  ],\n  content: [\n    { required: true, message: '请输入消息内容', trigger: 'blur' }\n  ]\n}\n\n// 方法\nconst fetchChannels = async () => {\n  loading.value = true\n  try {\n    const params = {\n      page: pagination.page,\n      size: pagination.size,\n      ...searchQuery\n    }\n    \n    const response = await channelsAPI.list(params)\n    channels.value = response.data.channels || []\n    pagination.total = response.data.total || 0\n  } catch (error) {\n    ElMessage.error('获取渠道列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst fetchChannelTypes = async () => {\n  try {\n    const response = await channelsAPI.getTypes()\n    channelTypes.value = response.data || []\n  } catch (error) {\n    console.error('获取渠道类型失败:', error)\n    // 设置默认类型\n    channelTypes.value = ['wechat', 'dingtalk', 'email', 'webhook']\n  }\n}\n\nconst fetchTemplates = async () => {\n  try {\n    const response = await templatesAPI.list()\n    availableTemplates.value = response.data.list || []\n    console.log('获取到的模版列表:', availableTemplates.value)\n  } catch (error) {\n    console.error('获取模版列表失败:', error)\n  }\n}\n\nconst handleSearch = () => {\n  pagination.page = 1\n  fetchChannels()\n}\n\nconst handleReset = () => {\n  Object.assign(searchQuery, {\n    name: '',\n    type: '',\n    status: ''\n  })\n  pagination.page = 1\n  fetchChannels()\n}\n\nconst handleSortChange = ({ column, prop, order }) => {\n  // 这里可以实现排序逻辑\n  console.log('排序变化:', { column, prop, order })\n}\n\nconst handleSizeChange = (val) => {\n  pagination.size = val\n  pagination.page = 1\n  fetchChannels()\n}\n\nconst handleCurrentChange = (val) => {\n  pagination.page = val\n  fetchChannels()\n}\n\nconst handleAdd = () => {\n  isEditing.value = false\n  currentChannel.value = null\n  resetForm()\n  dialogVisible.value = true\n}\n\nconst handleEdit = (channel) => {\n  isEditing.value = true\n  currentChannel.value = channel\n  \n  // 填充表单\n  Object.assign(channelForm, {\n    name: channel.name,\n    type: channel.type,\n    status: channel.status,\n    description: channel.description,\n    template_id: channel.template_id || ''  // 处理null值\n  })\n  \n  // 解析配置\n  try {\n    channelConfig.value = JSON.parse(channel.config || '{}')\n  } catch (error) {\n    console.error('解析渠道配置失败:', error)\n    channelConfig.value = {}\n  }\n  \n  dialogVisible.value = true\n}\n\n// 下拉菜单命令处理\nconst handleDropdownCommand = async (command, channel) => {\n  switch (command) {\n    case 'send':\n      handleSend(channel)\n      break\n    case 'duplicate':\n      await handleDuplicate(channel)\n      break\n    case 'delete':\n      await handleDelete(channel)\n      break\n  }\n}\n\n// 复制渠道\nconst handleDuplicate = async (channel) => {\n  try {\n    const duplicateData = {\n      name: `${channel.name} - 副本`,\n      type: channel.type,\n      status: 'inactive', // 副本默认为停用状态\n      description: `${channel.description || ''} (复制自 ${channel.name})`,\n      template_id: channel.template_id,\n      config: channel.config\n    }\n    \n    await channelsAPI.create(duplicateData)\n    ElMessage.success('复制渠道成功')\n    fetchChannels()\n  } catch (error) {\n    console.error('复制渠道失败:', error)\n    ElMessage.error('复制渠道失败')\n  }\n}\n\nconst handleDelete = async (channel) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要删除渠道 \"${channel.name}\" 吗？`,\n      '确认删除',\n      {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }\n    )\n    \n    await channelsAPI.delete(channel.id)\n    ElMessage.success('删除成功')\n    fetchChannels()\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('删除失败')\n    }\n  }\n}\n\nconst handleTest = async (channel) => {\n  testingChannels.value.push(channel.id)\n  try {\n    await channelsAPI.test(channel.id)\n    ElMessage.success('测试成功')\n    fetchChannels() // 刷新列表以更新测试状态\n  } catch (error) {\n    ElMessage.error('测试失败')\n  } finally {\n    testingChannels.value = testingChannels.value.filter(id => id !== channel.id)\n  }\n}\n\nconst handleSend = (channel) => {\n  currentSendChannel.value = channel\n  sendDialogVisible.value = true\n}\n\nconst handleSendMessage = async () => {\n  if (!sendFormRef.value) return\n  \n  try {\n    await sendFormRef.value.validate()\n    \n    sending.value = true\n    await channelsAPI.send(currentSendChannel.value.id, sendForm)\n    ElMessage.success('发送成功')\n    sendDialogVisible.value = false\n  } catch (error) {\n    if (error !== false) {\n      ElMessage.error('发送失败')\n    }\n  } finally {\n    sending.value = false\n  }\n}\n\nconst handleSubmit = async () => {\n  if (!channelFormRef.value) return\n  \n  try {\n    await channelFormRef.value.validate()\n    \n    submitting.value = true\n    \n    const data = {\n      ...channelForm,\n      config: JSON.stringify(channelConfig.value),\n      template_id: channelForm.template_id || null  // 确保空值转为null\n    }\n    \n    if (isEditing.value) {\n      await channelsAPI.update(currentChannel.value.id, data)\n      ElMessage.success('更新成功')\n    } else {\n      await channelsAPI.create(data)\n      ElMessage.success('创建成功')\n    }\n    \n    dialogVisible.value = false\n    fetchChannels()\n  } catch (error) {\n    if (error !== false) {\n      ElMessage.error(isEditing.value ? '更新失败' : '创建失败')\n    }\n  } finally {\n    submitting.value = false\n  }\n}\n\nconst handleTypeChange = (type) => {\n  // 切换类型时重置配置\n  channelConfig.value = {}\n}\n\nconst handleConfigTest = async (config) => {\n  // 验证配置是否完整\n  if (!channelForm.type) {\n    ElMessage.error('请先选择渠道类型')\n    return\n  }\n  \n  if (!config || Object.keys(config).length === 0) {\n    ElMessage.error('请填写渠道配置信息')\n    return\n  }\n\n  try {\n    console.log('测试配置:', {\n      type: channelForm.type,\n      config: JSON.stringify(config)\n    })\n    \n    ElMessage.info('正在测试配置，请稍候...')\n    \n    await channelsAPI.test({\n      type: channelForm.type,\n      config: JSON.stringify(config)\n    })\n    ElMessage.success('配置测试成功')\n  } catch (error) {\n    console.error('配置测试失败:', error)\n    \n    // 显示详细错误信息\n    let errorMessage = '配置测试失败'\n    if (error.response?.data?.error) {\n      errorMessage += ': ' + error.response.data.error\n    } else if (error.message) {\n      if (error.code === 'ECONNABORTED') {\n        errorMessage = '配置测试超时，请检查网络连接或联系管理员'\n      } else {\n        errorMessage += ': ' + error.message\n      }\n    }\n    \n    ElMessage.error(errorMessage)\n  }\n}\n\nconst handleDialogClose = () => {\n  resetForm()\n}\n\nconst resetForm = () => {\n  Object.assign(channelForm, {\n    name: '',\n    type: '',\n    status: 'active',\n    description: '',\n    template_id: ''\n  })\n  channelConfig.value = {}\n  \n  if (channelFormRef.value) {\n    channelFormRef.value.clearValidate()\n  }\n}\n\n// 工具方法\nconst getTypeLabel = (type) => {\n  const labels = {\n    wechat: '企业微信',\n    dingtalk: '钉钉',\n    email: '邮件',\n    webhook: 'Webhook'\n  }\n  return labels[type] || type\n}\n\nconst getTypeColor = (type) => {\n  const colors = {\n    wechat: 'success',\n    dingtalk: 'primary',\n    email: 'warning',\n    webhook: 'info'\n  }\n  return colors[type] || 'info'\n}\n\nconst getConfigComponent = (type) => {\n  const components = {\n    wechat: WeChatConfig,\n    dingtalk: DingTalkConfig,\n    email: EmailConfig,\n    webhook: WebhookConfig\n  }\n  return components[type] || 'div'\n}\n\n// 生命周期\nonMounted(() => {\n  fetchChannelTypes()\n  fetchTemplates()\n  fetchChannels()\n})\n</script>\n\n<style scoped>\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.search-filter {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.dialog-footer {\n  text-align: right;\n}\n\n.text-gray-400 {\n  color: #9ca3af;\n}\n\n.text-danger {\n  color: #f56c6c;\n}\n\n:deep(.el-dropdown-menu__item.text-danger:hover) {\n  background-color: #fef0f0;\n  color: #f56c6c;\n}\n</style> "],"names":["props","__props","emit","__emit","testing","ref","localConfig","reactive","watch","newVal","emitChange","handleTypeChange","handleTest","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_el_form_item","_component_el_radio_group","_cache","$event","_component_el_radio","_Fragment","_component_el_input","_createElementVNode","_hoisted_2","_component_el_text","_hoisted_3","_component_el_input_number","_hoisted_4","_component_el_button","_component_el_switch","_hoisted_5","toAddresses","ccAddresses","handleToChange","value","email","handleCcChange","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","title","date","time","_component_el_select","_component_el_option","customHeaders","handleAuthTypeChange","handleHeadersChange","_createBlock","content","timestamp","channels","loading","channelTypes","availableTemplates","testingChannels","searchQuery","pagination","dialogVisible","dialogTitle","computed","isEditing","submitting","currentChannel","filteredTemplates","channelForm","matchedTemplates","t","otherTemplates","channelFormRef","channelConfig","channelFormRules","sendDialogVisible","sending","currentSendChannel","sendFormRef","sendForm","sendFormRules","fetchChannels","params","response","channelsAPI","ElMessage","fetchChannelTypes","error","fetchTemplates","templatesAPI","handleSearch","handleReset","handleSortChange","column","prop","order","handleSizeChange","val","handleCurrentChange","handleAdd","resetForm","handleEdit","channel","handleDropdownCommand","command","handleSend","handleDuplicate","handleDelete","duplicateData","ElMessageBox","id","handleSendMessage","handleSubmit","data","type","handleConfigTest","config","errorMessage","_b","_a","handleDialogClose","getTypeLabel","getTypeColor","getConfigComponent","WeChatConfig","DingTalkConfig","EmailConfig","WebhookConfig","_component_el_card","_component_el_icon","_unref","Plus","_component_el_row","_component_el_col","Search","_renderList","Refresh","_component_el_table","_component_el_table_column","_withCtx","scope","_component_el_tag","_createTextVNode","formatDate","_component_el_button_group","Edit","_component_el_dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","ArrowDown","_component_el_pagination","_component_el_dialog","_hoisted_12","_component_el_form","template","_hoisted_9","_hoisted_10","_component_el_divider","_resolveDynamicComponent","_hoisted_13"],"mappings":"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"}