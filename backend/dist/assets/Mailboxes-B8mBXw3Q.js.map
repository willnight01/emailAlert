{"version":3,"file":"Mailboxes-B8mBXw3Q.js","sources":["../../src/components/MailboxForm.vue","../../src/views/Mailboxes.vue"],"sourcesContent":["<template>\n  <el-form\n    ref=\"formRef\"\n    :model=\"formData\"\n    :rules=\"formRules\"\n    label-width=\"100px\"\n    label-position=\"left\"\n  >\n    <el-form-item label=\"邮箱名称\" prop=\"name\">\n      <el-input \n        v-model=\"formData.name\" \n        placeholder=\"请输入邮箱名称\"\n        :disabled=\"loading\"\n      />\n    </el-form-item>\n    \n    <el-form-item label=\"邮箱地址\" prop=\"email\">\n      <el-input \n        v-model=\"formData.email\" \n        placeholder=\"请输入邮箱地址\"\n        :disabled=\"loading\"\n        @blur=\"autoFillUsername\"\n      />\n    </el-form-item>\n    \n    <el-form-item label=\"协议类型\" prop=\"protocol\">\n      <el-select \n        v-model=\"formData.protocol\" \n        placeholder=\"请选择协议类型\" \n        style=\"width: 100%\"\n        :disabled=\"loading\"\n        @change=\"onProtocolChange\"\n      >\n        <el-option label=\"IMAP\" value=\"IMAP\" />\n        <el-option label=\"POP3\" value=\"POP3\" />\n      </el-select>\n    </el-form-item>\n    \n    <el-row :gutter=\"20\">\n      <el-col :span=\"14\">\n        <el-form-item label=\"服务器地址\" prop=\"host\">\n          <el-input \n            v-model=\"formData.host\" \n            placeholder=\"如: imap.gmail.com\"\n            :disabled=\"loading\"\n            @blur=\"autoFillPort\"\n          />\n        </el-form-item>\n      </el-col>\n      <el-col :span=\"10\">\n        <el-form-item label=\"端口\" prop=\"port\">\n          <el-input-number \n            v-model=\"formData.port\" \n            :min=\"1\" \n            :max=\"65535\" \n            style=\"width: 100%\" \n            placeholder=\"端口号\"\n            :disabled=\"loading\"\n            :controls-position=\"right\"\n            size=\"default\"\n          />\n        </el-form-item>\n      </el-col>\n    </el-row>\n    \n    <el-form-item label=\"用户名\" prop=\"username\">\n      <el-input \n        v-model=\"formData.username\" \n        placeholder=\"通常为邮箱地址\"\n        :disabled=\"loading\"\n      />\n    </el-form-item>\n    \n    <el-form-item label=\"密码\" prop=\"password\">\n      <el-input \n        v-model=\"formData.password\" \n        type=\"text\" \n        placeholder=\"请输入密码或应用专用密码\"\n        :disabled=\"loading\"\n      />\n      <div class=\"password-hint\">\n        <el-text size=\"small\" type=\"info\">\n          <el-icon><InfoFilled /></el-icon>\n          对于Gmail等邮箱，请使用应用专用密码而非登录密码\n        </el-text>\n      </div>\n    </el-form-item>\n    \n    <el-form-item label=\"SSL加密\">\n      <el-switch \n        v-model=\"formData.ssl\" \n        active-text=\"启用\"\n        inactive-text=\"禁用\"\n        :disabled=\"loading\"\n        @change=\"onSSLChange\"\n      />\n    </el-form-item>\n    \n    <el-form-item label=\"描述\">\n      <el-input \n        v-model=\"formData.description\" \n        type=\"textarea\" \n        :rows=\"3\" \n        placeholder=\"邮箱配置描述（可选）\"\n        :disabled=\"loading\"\n      />\n    </el-form-item>\n\n    <!-- 常用邮箱快捷配置 -->\n    <el-form-item label=\"快捷配置\">\n      <el-button-group>\n        <el-button \n          size=\"small\" \n          @click=\"applyQuickConfig('gmail')\"\n          :disabled=\"loading\"\n        >\n          Gmail\n        </el-button>\n        <el-button \n          size=\"small\" \n          @click=\"applyQuickConfig('outlook')\"\n          :disabled=\"loading\"\n        >\n          Outlook\n        </el-button>\n        <el-button \n          size=\"small\" \n          @click=\"applyQuickConfig('qq')\"\n          :disabled=\"loading\"\n        >\n          QQ邮箱\n        </el-button>\n        <el-button \n          size=\"small\" \n          @click=\"applyQuickConfig('163')\"\n          :disabled=\"loading\"\n        >\n          163邮箱\n        </el-button>\n      </el-button-group>\n      <div class=\"quick-config-hint\">\n        <el-text size=\"small\" type=\"info\">点击快捷配置按钮自动填充服务器配置</el-text>\n      </div>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { InfoFilled } from '@element-plus/icons-vue'\nimport { ElMessage } from 'element-plus'\n\n// Props\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['update:modelValue', 'validate'])\n\n// Refs\nconst formRef = ref()\n\n// 表单数据\nconst formData = ref({\n  name: '',\n  email: '',\n  protocol: 'IMAP',\n  host: '',\n  port: 993,\n  username: '',\n  password: '',\n  ssl: true,\n  description: '',\n  ...props.modelValue\n})\n\n// 表单验证规则\nconst formRules = {\n  name: [\n    { required: true, message: '请输入邮箱名称', trigger: 'blur' },\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n  ],\n  email: [\n    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n  ],\n  protocol: [\n    { required: true, message: '请选择协议类型', trigger: 'change' }\n  ],\n  host: [\n    { required: true, message: '请输入服务器地址', trigger: 'blur' }\n  ],\n  port: [\n    { required: true, message: '请输入端口号', trigger: 'blur' },\n    { type: 'number', min: 1, max: 65535, message: '端口号范围 1-65535', trigger: 'blur' }\n  ],\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' }\n  ]\n}\n\n// 常用邮箱配置\nconst emailConfigs = {\n  gmail: {\n    imap: { host: 'imap.gmail.com', port: 993, ssl: true },\n    pop3: { host: 'pop.gmail.com', port: 995, ssl: true }\n  },\n  outlook: {\n    imap: { host: 'outlook.office365.com', port: 993, ssl: true },\n    pop3: { host: 'outlook.office365.com', port: 995, ssl: true }\n  },\n  qq: {\n    imap: { host: 'imap.qq.com', port: 993, ssl: true },\n    pop3: { host: 'pop.qq.com', port: 995, ssl: true }\n  },\n  163: {\n    imap: { host: 'imap.163.com', port: 993, ssl: true },\n    pop3: { host: 'pop.163.com', port: 995, ssl: true }\n  }\n}\n\n// 监听props变化\nwatch(() => props.modelValue, (newValue) => {\n  Object.assign(formData.value, newValue)\n}, { deep: true, immediate: true })\n\n// 监听formData变化，触发更新\nwatch(formData, (newValue) => {\n  emit('update:modelValue', { ...newValue })\n}, { deep: true })\n\n// 方法\nconst validate = async () => {\n  try {\n    await formRef.value.validate()\n    return true\n  } catch (error) {\n    return false\n  }\n}\n\nconst resetFields = () => {\n  formRef.value?.resetFields()\n}\n\nconst clearValidate = () => {\n  formRef.value?.clearValidate()\n}\n\n// 自动填充用户名\nconst autoFillUsername = () => {\n  if (formData.value.email && !formData.value.username) {\n    formData.value.username = formData.value.email\n  }\n}\n\n// 协议变化处理\nconst onProtocolChange = () => {\n  if (formData.value.host) {\n    autoFillPort()\n  }\n}\n\n// SSL变化处理\nconst onSSLChange = () => {\n  autoFillPort()\n}\n\n// 根据服务器地址自动填充端口\nconst autoFillPort = () => {\n  const host = formData.value.host.toLowerCase()\n  const protocol = formData.value.protocol.toLowerCase()\n  const ssl = formData.value.ssl\n  \n  // 常见端口配置\n  const portMap = {\n    imap: ssl ? 993 : 143,\n    pop3: ssl ? 995 : 110\n  }\n  \n  // 如果是已知的服务器，使用预设配置\n  if (host.includes('gmail.com')) {\n    const config = emailConfigs.gmail[protocol]\n    if (config) {\n      formData.value.port = config.port\n      formData.value.ssl = config.ssl\n    }\n  } else if (host.includes('outlook.office365.com') || host.includes('hotmail.com')) {\n    const config = emailConfigs.outlook[protocol]\n    if (config) {\n      formData.value.port = config.port\n      formData.value.ssl = config.ssl\n    }\n  } else if (host.includes('qq.com')) {\n    const config = emailConfigs.qq[protocol]\n    if (config) {\n      formData.value.port = config.port\n      formData.value.ssl = config.ssl\n    }\n  } else if (host.includes('163.com')) {\n    const config = emailConfigs['163'][protocol]\n    if (config) {\n      formData.value.port = config.port\n      formData.value.ssl = config.ssl\n    }\n  } else {\n    // 使用默认端口\n    formData.value.port = portMap[protocol] || 993\n  }\n}\n\n// 应用快捷配置\nconst applyQuickConfig = (provider) => {\n  const config = emailConfigs[provider]\n  if (!config) return\n  \n  const protocolConfig = config[formData.value.protocol.toLowerCase()]\n  if (!protocolConfig) return\n  \n  formData.value.host = protocolConfig.host\n  formData.value.port = protocolConfig.port\n  formData.value.ssl = protocolConfig.ssl\n  \n  ElMessage.success(`已应用${provider.toUpperCase()}配置`)\n}\n\n// 暴露方法\ndefineExpose({\n  validate,\n  resetFields,\n  clearValidate,\n  formData\n})\n</script>\n\n<style scoped>\n.password-hint {\n  margin-top: 5px;\n}\n\n.quick-config-hint {\n  margin-top: 5px;\n}\n\n:deep(.el-input-number .el-input__inner) {\n  text-align: left;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n:deep(.el-input-number) {\n  min-width: 120px;\n}\n\n:deep(.el-input-number .el-input__wrapper) {\n  padding: 1px 15px 1px 11px;\n}\n\n:deep(.el-form-item__content) {\n  line-height: 1.5;\n}\n\n/* 端口输入框专用样式优化 */\n:deep(.el-row .el-col:last-child .el-input-number) {\n  width: 100%;\n}\n\n:deep(.el-row .el-col:last-child .el-input-number .el-input__inner) {\n  font-size: 15px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  text-align: center;\n}\n</style> ","<template>\n  <div class=\"mailboxes\">\n    <el-card>\n      <template #header>\n        <div class=\"page-header\">\n          <span>邮箱管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">\n            <el-icon><Plus /></el-icon>\n            添加邮箱\n          </el-button>\n        </div>\n      </template>\n      \n      <!-- 搜索和筛选区域 -->\n      <div class=\"filter-section\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"8\">\n            <el-input\n              v-model=\"searchKeyword\"\n              placeholder=\"搜索邮箱名称或地址\"\n              clearable\n              @input=\"handleSearch\"\n            >\n              <template #prefix>\n                <el-icon><Search /></el-icon>\n              </template>\n            </el-input>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-select v-model=\"statusFilter\" placeholder=\"状态筛选\" clearable @change=\"handleFilter\">\n              <el-option label=\"全部状态\" value=\"\" />\n              <el-option label=\"激活\" value=\"active\" />\n              <el-option label=\"停用\" value=\"inactive\" />\n            </el-select>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-select v-model=\"protocolFilter\" placeholder=\"协议筛选\" clearable @change=\"handleFilter\">\n              <el-option label=\"全部协议\" value=\"\" />\n              <el-option label=\"IMAP\" value=\"IMAP\" />\n              <el-option label=\"POP3\" value=\"POP3\" />\n            </el-select>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-button @click=\"refreshData\" :loading=\"loading\">\n              <el-icon><Refresh /></el-icon>\n              刷新\n            </el-button>\n          </el-col>\n        </el-row>\n      </div>\n\n      <!-- 邮箱列表表格 -->\n      <el-table \n        :data=\"filteredMailboxes\" \n        style=\"width: 100%\" \n        v-loading=\"loading\"\n        :default-sort=\"{ prop: 'created_at', order: 'descending' }\"\n      >\n        <el-table-column prop=\"name\" label=\"邮箱名称\" min-width=\"150\">\n          <template #default=\"scope\">\n            <div class=\"name-cell\">\n              <span class=\"name\">{{ scope.row.name }}</span>\n              <span class=\"description\" v-if=\"scope.row.description\">{{ scope.row.description }}</span>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"email\" label=\"邮箱地址\" min-width=\"200\" />\n        \n        <el-table-column prop=\"protocol\" label=\"协议\" width=\"80\">\n          <template #default=\"scope\">\n            <el-tag size=\"small\" :type=\"scope.row.protocol === 'IMAP' ? 'primary' : 'success'\">\n              {{ scope.row.protocol }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"host\" label=\"服务器\" width=\"120\" />\n        \n        <el-table-column prop=\"port\" label=\"端口\" width=\"80\" />\n        \n        <el-table-column label=\"SSL\" width=\"60\">\n          <template #default=\"scope\">\n            <el-icon v-if=\"scope.row.ssl\" class=\"ssl-icon\" color=\"#67c23a\">\n              <Check />\n            </el-icon>\n            <el-icon v-else color=\"#f56c6c\">\n              <Close />\n            </el-icon>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag \n              :type=\"scope.row.status === 'active' ? 'success' : 'danger'\"\n              size=\"small\"\n            >\n              {{ scope.row.status === 'active' ? '激活' : '停用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"连接状态\" width=\"120\">\n          <template #default=\"scope\">\n            <div class=\"connection-status\">\n              <el-button\n                :type=\"getConnectionStatusType(scope.row.id)\"\n                size=\"small\"\n                :loading=\"testingConnections.includes(scope.row.id)\"\n                @click=\"testConnection(scope.row)\"\n              >\n                {{ getConnectionStatusText(scope.row.id) }}\n              </el-button>\n            </div>\n          </template>\n        </el-table-column>\n        \n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"160\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.created_at) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button-group>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row)\"\n                :icon=\"Edit\"\n              >\n                编辑\n              </el-button>\n              <el-button \n                :type=\"scope.row.status === 'active' ? 'warning' : 'success'\" \n                size=\"small\" \n                @click=\"toggleStatus(scope.row)\"\n                :icon=\"Switch\"\n              >\n                {{ scope.row.status === 'active' ? '停用' : '启用' }}\n              </el-button>\n              <el-dropdown @command=\"(command) => handleDropdownCommand(command, scope.row)\">\n                <el-button size=\"small\" type=\"info\">\n                  更多<el-icon class=\"el-icon--right\"><ArrowDown /></el-icon>\n                </el-button>\n                <template #dropdown>\n                  <el-dropdown-menu>\n                    <el-dropdown-item \n                      command=\"test\"\n                    >\n                      测试连接\n                    </el-dropdown-item>\n                    <el-dropdown-item \n                      command=\"duplicate\"\n                    >\n                      复制邮箱\n                    </el-dropdown-item>\n                    <el-dropdown-item \n                      command=\"delete\"\n                      class=\"text-danger\"\n                      divided\n                    >\n                      删除\n                    </el-dropdown-item>\n                  </el-dropdown-menu>\n                </template>\n              </el-dropdown>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-wrapper\">\n        <el-pagination\n          v-model:current-page=\"pagination.page\"\n          v-model:page-size=\"pagination.size\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total=\"pagination.total\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 邮箱添加/编辑对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"isEdit ? '编辑邮箱' : '添加邮箱'\"\n      width=\"600px\"\n      :close-on-click-modal=\"false\"\n    >\n      <MailboxForm\n        ref=\"mailboxFormRef\"\n        v-model=\"formData\"\n        :loading=\"testingForm || submitting\"\n      />\n      \n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"info\" @click=\"testFormConnection\" :loading=\"testingForm\">\n            测试连接\n          </el-button>\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\n            {{ isEdit ? '更新' : '创建' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick } from 'vue'\nimport { \n  Plus, Search, Refresh, Edit, Delete, Switch, \n  Check, Close, ArrowDown \n} from '@element-plus/icons-vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { mailboxAPI } from '@/api'\nimport MailboxForm from '@/components/MailboxForm.vue'\n\n// 响应式数据\nconst loading = ref(false)\nconst mailboxes = ref([])\nconst searchKeyword = ref('')\nconst statusFilter = ref('')\nconst protocolFilter = ref('')\nconst testingConnections = ref([])\nconst connectionStatuses = ref({})\n\n// 分页数据\nconst pagination = ref({\n  page: 1,\n  size: 20,\n  total: 0\n})\n\n// 对话框和表单\nconst dialogVisible = ref(false)\nconst isEdit = ref(false)\nconst mailboxFormRef = ref()\nconst testingForm = ref(false)\nconst submitting = ref(false)\n\n// 表单数据\nconst formData = ref({\n  name: '',\n  email: '',\n  protocol: 'IMAP',\n  host: '',\n  port: 993,\n  username: '',\n  password: '',\n  ssl: true,\n  description: ''\n})\n\n// 计算属性\nconst filteredMailboxes = computed(() => {\n  return mailboxes.value.filter(mailbox => {\n    const matchesKeyword = searchKeyword.value === '' || \n      mailbox.name.toLowerCase().includes(searchKeyword.value.toLowerCase()) ||\n      mailbox.email.toLowerCase().includes(searchKeyword.value.toLowerCase())\n    \n    const matchesStatus = statusFilter.value === '' || \n      mailbox.status === statusFilter.value\n    \n    const matchesProtocol = protocolFilter.value === '' || \n      mailbox.protocol === protocolFilter.value\n    \n    return matchesKeyword && matchesStatus && matchesProtocol\n  })\n})\n\n// 生命周期\nonMounted(() => {\n  loadMailboxes()\n})\n\n// 方法\nconst loadMailboxes = async () => {\n  loading.value = true\n  try {\n    const params = {\n      page: pagination.value.page,\n      size: pagination.value.size\n    }\n    const response = await mailboxAPI.list(params)\n    mailboxes.value = response.data.list || []\n    pagination.value.total = response.data.total || 0\n  } catch (error) {\n    console.error('加载邮箱列表失败:', error)\n    ElMessage.error('加载邮箱列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst refreshData = () => {\n  loadMailboxes()\n}\n\nconst handleSearch = () => {\n  // 搜索是实时的，通过计算属性实现\n}\n\nconst handleFilter = () => {\n  // 筛选是实时的，通过计算属性实现\n}\n\nconst handleSizeChange = (size) => {\n  pagination.value.size = size\n  pagination.value.page = 1\n  loadMailboxes()\n}\n\nconst handleCurrentChange = (page) => {\n  pagination.value.page = page\n  loadMailboxes()\n}\n\nconst handleAdd = () => {\n  isEdit.value = false\n  resetForm()\n  dialogVisible.value = true\n}\n\nconst handleEdit = async (row) => {\n  isEdit.value = true\n  try {\n    // 获取包含密码的完整邮箱信息\n    const response = await mailboxAPI.getForEdit(row.id)\n    formData.value = { ...response.data }\n    dialogVisible.value = true\n  } catch (error) {\n    console.error('获取邮箱详情失败:', error)\n    ElMessage.error('获取邮箱详情失败')\n    // 如果获取失败，使用原有数据但清空密码\n    formData.value = { ...row }\n    formData.value.password = ''\n    dialogVisible.value = true\n  }\n}\n\nconst resetForm = () => {\n  formData.value = {\n    name: '',\n    email: '',\n    protocol: 'IMAP',\n    host: '',\n    port: 993,\n    username: '',\n    password: '',\n    ssl: true,\n    description: ''\n  }\n  if (mailboxFormRef.value) {\n    mailboxFormRef.value.resetFields()\n  }\n}\n\nconst testFormConnection = async () => {\n  try {\n    const isValid = await mailboxFormRef.value.validate()\n    if (!isValid) {\n      ElMessage.error('请先填写完整的邮箱配置信息')\n      return\n    }\n    \n    testingForm.value = true\n    const testData = { \n      ...formData.value,\n      username: formData.value.email // 使用邮箱地址作为用户名\n    }\n    \n    const response = await mailboxAPI.test(testData)\n    \n    // 检查响应数据中的连接状态\n    if (response.data && response.data.status === 'connected') {\n      ElMessage.success('连接测试成功！')\n    } else {\n      // 连接失败，显示具体错误信息\n      const errorMessage = response.data?.message || '连接测试失败'\n      ElMessage.error(`连接测试失败: ${errorMessage}`)\n    }\n  } catch (error) {\n    // HTTP层面的错误\n    if (error.response) {\n      ElMessage.error(`连接测试失败: ${error.response.data?.message || '未知错误'}`)\n    } else {\n      ElMessage.error('连接测试失败，请检查配置信息')\n    }\n  } finally {\n    testingForm.value = false\n  }\n}\n\nconst handleSubmit = async () => {\n  try {\n    const isValid = await mailboxFormRef.value.validate()\n    if (!isValid) {\n      return\n    }\n    \n    submitting.value = true\n    const submitData = { \n      ...formData.value,\n      username: formData.value.email // 使用邮箱地址作为用户名\n    }\n    \n    if (isEdit.value) {\n      // 编辑时，如果密码为空则不更新密码\n      if (!submitData.password) {\n        delete submitData.password\n      }\n      await mailboxAPI.update(submitData.id, submitData)\n      ElMessage.success('邮箱配置更新成功')\n    } else {\n      await mailboxAPI.create(submitData)\n      ElMessage.success('邮箱配置创建成功')\n    }\n    \n    dialogVisible.value = false\n    loadMailboxes()\n  } catch (error) {\n    ElMessage.error(isEdit.value ? '更新邮箱配置失败' : '创建邮箱配置失败')\n  } finally {\n    submitting.value = false\n  }\n}\n\nconst testConnection = async (row) => {\n  if (testingConnections.value.includes(row.id)) return\n  \n  testingConnections.value.push(row.id)\n  try {\n    const response = await mailboxAPI.test(row.id)\n    \n    // 检查响应数据中的连接状态\n    if (response.data && response.data.status === 'connected') {\n      connectionStatuses.value[row.id] = 'success'\n      ElMessage.success(`${row.name} 连接测试成功`)\n    } else {\n      // 连接失败，显示具体错误信息\n      const errorMessage = response.data?.message || '连接失败'\n      connectionStatuses.value[row.id] = 'error'\n      ElMessage.error(`${row.name} 连接测试失败: ${errorMessage}`)\n    }\n  } catch (error) {\n    connectionStatuses.value[row.id] = 'error'\n    if (error.response) {\n      ElMessage.error(`${row.name} 连接测试失败: ${error.response.data?.message || '连接失败'}`)\n    } else {\n      ElMessage.error(`${row.name} 连接测试失败，请检查配置信息`)\n    }\n  } finally {\n    testingConnections.value = testingConnections.value.filter(id => id !== row.id)\n    // 3秒后清除连接状态\n    setTimeout(() => {\n      delete connectionStatuses.value[row.id]\n    }, 3000)\n  }\n}\n\nconst toggleStatus = async (row) => {\n  try {\n    const newStatus = row.status === 'active' ? 'inactive' : 'active'\n    await mailboxAPI.update(row.id, { status: newStatus })\n    \n    row.status = newStatus\n    ElMessage.success(`邮箱已${newStatus === 'active' ? '启用' : '停用'}`)\n  } catch (error) {\n    ElMessage.error('状态更新失败')\n  }\n}\n\n// 下拉菜单命令处理\nconst handleDropdownCommand = async (command, row) => {\n  switch (command) {\n    case 'test':\n      await testConnection(row)\n      break\n    case 'duplicate':\n      await handleDuplicate(row)\n      break\n    case 'delete':\n      await handleDelete(row)\n      break\n  }\n}\n\n// 复制邮箱\nconst handleDuplicate = async (row) => {\n  try {\n    const duplicateData = {\n      name: `${row.name} - 副本`,\n      email: row.email,\n      protocol: row.protocol,\n      host: row.host,\n      port: row.port,\n      username: row.username,\n      password: '', // 密码需要重新设置\n      ssl: row.ssl,\n      status: 'inactive', // 副本默认为停用状态\n      description: `${row.description || ''} (复制自 ${row.name})`\n    }\n    \n    // 设置表单数据并打开编辑对话框\n    isEdit.value = false\n    formData.value = duplicateData\n    dialogVisible.value = true\n    ElMessage.info('请设置新邮箱的密码')\n  } catch (error) {\n    console.error('复制邮箱失败:', error)\n    ElMessage.error('复制邮箱失败')\n  }\n}\n\nconst handleDelete = async (row) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要删除邮箱 \"${row.name}\" 吗？此操作不可恢复。`,\n      '删除确认',\n      {\n        confirmButtonText: '确定删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }\n    )\n    \n    await mailboxAPI.delete(row.id)\n    ElMessage.success('邮箱删除成功')\n    loadMailboxes()\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('删除邮箱失败')\n    }\n  }\n}\n\nconst getConnectionStatusType = (id) => {\n  const status = connectionStatuses.value[id]\n  if (status === 'success') return 'success'\n  if (status === 'error') return 'danger'\n  return 'primary'\n}\n\nconst getConnectionStatusText = (id) => {\n  const status = connectionStatuses.value[id]\n  if (status === 'success') return '连接正常'\n  if (status === 'error') return '连接失败'\n  return '测试连接'\n}\n\nconst formatDate = (dateString) => {\n  if (!dateString) return ''\n  const date = new Date(dateString)\n  return date.toLocaleString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n}\n</script>\n\n<style scoped>\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.filter-section {\n  margin-bottom: 20px;\n}\n\n.name-cell {\n  display: flex;\n  flex-direction: column;\n}\n\n.name {\n  font-weight: 500;\n  color: var(--el-text-color-primary);\n}\n\n.description {\n  font-size: 12px;\n  color: var(--el-text-color-secondary);\n  margin-top: 2px;\n}\n\n.ssl-icon {\n  font-size: 16px;\n}\n\n.connection-status {\n  display: flex;\n  align-items: center;\n}\n\n.pagination-wrapper {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n:deep(.el-table .el-table__cell) {\n  padding: 8px 0;\n}\n\n:deep(.el-input-number .el-input__inner) {\n  text-align: left;\n}\n\n.text-danger {\n  color: #f56c6c;\n}\n\n:deep(.el-dropdown-menu__item.text-danger:hover) {\n  background-color: #fef0f0;\n  color: #f56c6c;\n}\n</style> "],"names":["props","__props","emit","__emit","formRef","ref","formData","formRules","emailConfigs","watch","newValue","validate","resetFields","_a","clearValidate","autoFillUsername","onProtocolChange","autoFillPort","onSSLChange","host","protocol","ssl","portMap","config","applyQuickConfig","provider","protocolConfig","ElMessage","__expose","_createBlock","_component_el_form","_createVNode","_component_el_form_item","_component_el_input","_cache","$event","_component_el_select","_component_el_option","_component_el_row","_component_el_col","_component_el_input_number","right","_createElementVNode","_hoisted_1","_component_el_text","_component_el_icon","_unref","InfoFilled","_component_el_switch","_component_el_button_group","_component_el_button","_hoisted_2","loading","mailboxes","searchKeyword","statusFilter","protocolFilter","testingConnections","connectionStatuses","pagination","dialogVisible","isEdit","mailboxFormRef","testingForm","submitting","filteredMailboxes","computed","mailbox","matchesKeyword","matchesStatus","matchesProtocol","onMounted","loadMailboxes","params","response","mailboxAPI","error","refreshData","handleSearch","handleFilter","handleSizeChange","size","handleCurrentChange","page","handleAdd","resetForm","handleEdit","row","testFormConnection","testData","errorMessage","_b","handleSubmit","submitData","testConnection","id","toggleStatus","newStatus","handleDropdownCommand","command","handleDuplicate","handleDelete","duplicateData","ElMessageBox","getConnectionStatusType","status","getConnectionStatusText","formatDate","dateString","_openBlock","_createElementBlock","_component_el_card","Plus","_hoisted_3","Search","Refresh","_component_el_table","_component_el_table_column","_withCtx","scope","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_component_el_tag","Check","Close","_hoisted_7","_createTextVNode","Edit","Switch","_component_el_dropdown","_component_el_dropdown_menu","_component_el_dropdown_item","ArrowDown","_hoisted_8","_component_el_pagination","_component_el_dialog","_hoisted_9","MailboxForm"],"mappings":"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"}